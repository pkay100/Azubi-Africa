--QUESTION ONE
SELECT COUNT(u_id) AS wave_users FROM users;
 
--QUESTION TWO
SELECT COUNT(transfer_id) AS cfa_transfers FROM transfers 
WHERE send_amount_currency = 'CFA';
 
--QUESTION THREE
SELECT DISTINCT COUNT(u_id) AS cfa_user_transfers FROM transfers 
WHERE send_amount_currency = 'CFA';

--QUESTION FOUR
SELECT TO_CHAR(TO_DATE (EXTRACT(MONTH FROM when_created)::text, 'MM'), 'Month') AS transaction_month,
COUNT(atx_id) AS num_of_agents FROM agent_transactions
WHERE EXTRACT(YEAR FROM when_created)=2018
GROUP BY EXTRACT(MONTH FROM when_created);
 
--QUESTION FIVE
SELECT
    CASE WHEN net_value > 0 THEN 'NET WITHDRAWERS'
    ELSE 'NET DEPOSITORS'
    END,
    COUNT(agent_id) AS net_count FROM (SELECT agent_id, sum(amount) AS net_value FROM agent_transactions
    WHERE ((amount < 0) OR (amount > 0)) AND (agent_transactions.when_created > (NOW() - INTERVAL '1 week'))
    GROUP BY agent_id
    ORDER BY agent_id ASC) AS abc
    GROUP BY (net_value > 0);

--QUESTION SIX    
SELECT City, Volume
INTO atx_volume_city_summary 
FROM ( Select agents.city AS City, count(agent_transactions.atx_id) AS Volume FROM agents 
INNER JOIN agent_transactions 
ON agents.agent_id = agent_transactions.agent_id
where (agent_transactions.when_created > (NOW() - INTERVAL '1 week'))                                     
GROUP BY agents.city) as atx_volume_summary;
                                       
--QUESTION SEVEN
SELECT City, Volume, Country
INTO atx_volume_city_summary_with_Country
FROM ( Select agents.city AS City, agents.country AS Country, count(agent_transactions.atx_id) AS Volume FROM agents 
INNER JOIN agent_transactions 
ON agents.agent_id = agent_transactions.agent_id
where (agent_transactions.when_created > (NOW() - INTERVAL '1 week'))                                     
GROUP BY agents.country,agents.city) as atx_volume_summary_with_Country;    
                                       
--QUESTION EIGHT
SELECT transfers.kind AS Kind, wallets.ledger_location AS Country, sum(transfers.send_amount_scalar) AS Volume FROM transfers 
INNER JOIN wallets 
ON transfers.source_wallet_id = wallets.wallet_id
where (transfers.when_created > (NOW() - INTERVAL '1 week'))                                       
GROUP BY wallets.ledger_location, transfers.kind; 
                                       
--QUESTION NINE
SELECT 
count(transfers.source_wallet_id) AS Unique_Senders,
count(transfer_id) AS Transaction_count,
transfers.kind AS Transfer_Kind,
wallets.ledger_location AS Country, 
sum(transfers.send_amount_scalar) AS Volume 
FROM transfers 
INNER JOIN wallets 
ON transfers.source_wallet_id = wallets.wallet_id
where (transfers.when_created > (NOW() - INTERVAL '1 week'))                                       
GROUP BY wallets.ledger_location, transfers.kind;         
                                       
--QUESTION TEN
SELECT source_wallet_id, send_amount_scalar FROM transfers 
WHERE send_amount_currency = 'CFA' AND (send_amount_scalar>10000000) AND (transfers.when_created > (NOW() - INTERVAL '1 month'));